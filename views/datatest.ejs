<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title></title>
		<style type="text/css">
			.grid table {
				width: 500px;
				text-align: center;
				border-collapse: collapse;
			}

			.grid tr th {
				background-color: orange;
			}

			.grid tr td {
				border: 1px dashed orange;
			}

			h1 {
				margin-left: 15%;
			}

			.book {
				border-bottom: 1px dashed greenyellow;
				background-color: orange;
				width: 500px;
				padding: 10px 0px 10px 0px;
			}

			.grid {
				margin-left: 30%;
			}
		</style>
	</head>
	<body>
		<div id="app">
			<div class="grid">
				<div>
					<h1>图书管理</h1>
					<div class="book">
						<div>书名：<input type="text" v-model="goods.book_name" /></div>
						<div>作者：<input type="text" v-model="goods.book_author" /></div>
						<div>描述：<input type="text" v-model="goods.book_desc" /></div>
						<div><button type="button" @click="handle">提交</button></div>
						<div><button type="button" @click="updateBtn">修改</button>
						</div>
					</div>
				</div>

				<table>
					<tr>
						<th>编号</th>
						<th>名称</th>
						<th>作者</th>
						<th>描述</th>
						<th>操作</th>
					</tr>
					<tr :key='item.id' v-for="item in books">
						<td>{{item.id}}</td>
						<td>{{item.book_name}}</td>
						<td>{{item.book_author}}</td>
						<td>{{item.book_desc}}</td>
						<td><a href="" @click.prevent="editBtn(item.id)">编辑</a>
							<span>|</span>
							<a href="" @click.prevent="deleteBook(item.id)">删除</a></td>
					</tr>

				</table>
			</div>
		</div>
		<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
		<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
		<script type="text/javascript">
			axios.defaults.baseURL = 'http://localhost:3000';
			axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
			const app = new Vue({
				el: '#app',
				created() {
					this.getBooks()
				},
				data: {
					books: [],
					goods: {
						id: '',
						book_name: '',
						book_author: '',
						book_desc: ''
					}
				},
				methods: {
					// 获取数据表所有信息
					async getBooks() {
						const {
							data: res
						} = await axios.get('/books')
						this.books = res
						console.log(this.books);
					},
					// 添加数据
					async handle() {
						const {
							data: res
						} = await axios.post('/books', this.goods)
						this.getBooks()
					},
					//删除数据
					async deleteBook(id) {
						const {
							data: res
						} = await axios.delete(`/books/${id}`)
						console.log(res);
						this.getBooks()
					},
					//编辑数据 通过id获取数据
					async editBtn(id) {
						const {
							data: res
						} = await axios.get(`/books/${id}`)
						console.log(res);
						this.goods = res[0]
					},
					//修改按钮 时完成修改
					async updateBtn() {
						const {
							data: res
						} = await axios.put('/books/edit/' + this.goods.id, this.goods)
						this.getBooks()
					}
				}
			})
		</script>
	</body>
</html>
